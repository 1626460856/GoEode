syntax = "v1"

info (
	title: "User.api"
	author: "Eode"
	version: "1.0.0"
)

type (
	Product {
		Id          string  `json:"id"`          // 商品ID根据kafka消息交互mysql自增键生成
		Name        string  `json:"name"`        // 商品名称
		Description string  `json:"description"` // 商品描述
		Price       float64 `json:"price"`       // 商品价格
		Stock       int     `json:"stock"`       // 商品库存
		Boss        string  `json:"boss"`        // 商品所属
	}

	AddProductReq {
		Name        string  `json:"name"`        // 商品名称
		Description string  `json:"description"` // 商品描述
		Price       float64 `json:"price"`       // 商品价格
		Stock       int     `json:"stock"`       // 商品库存
		Boss        string  `json:"boss"`        // 商品所属
	}

	GetProductReq {
		Id string `json:"id"` // 传入商品ID获取单个商品
	}

	RefreshProductsReq struct{}

	CommonResply { // 通用的响应结构体
		Code    int64  `json:"Code"`
		Message string `json:"Message"`
		Data    string `json:"Data"`
	}
)

@server(
	jwt: Auth // 使用jwt认证
)

service shop {
	@doc (
		summary: "添加商品"
	)
	@handler AddProduct
	post /addproduct (AddProductReq) returns (CommonResply)

	@doc (
		summary: "获取商品信息"
	)
	@handler GetProduct
	get /getproduct (GetProductReq) returns (Product)

	@doc (
		summary: "刷新商品列表"
	)
	@handler RefreshProducts
	get /refreshproducts (RefreshProductsReq) returns (CommonResply)
}