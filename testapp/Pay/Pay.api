syntax = "v1"

info (
	title: "User.api"
	author: "Eode"
	version: "1.0.0"
)

type (
	Order {
		OrderID     int     `json:"orderId"`     // 订单idmysql自增键
		ProductID   int     `json:"productId"`   // 商品id
		ProductName string  `json:"productName"` // 商品名称
		Price       float64 `json:"price"`       // 商品价格
		Boss        string  `json:"boss"`        // 商家
		BuyQuantity int     `json:"buyQuantity"` // 购买商品数量
		UserName    string  `json:"userName"`    // 购买者这个通过传入的token解析获得
		Coupon      float64 `json:"coupon"`      // 优惠券,创建时默认为1
		OrderStatus string  `json:"orderStatus"` // 订单状态 有三种状态，“unpaid”为未支付，“paying”为支付中，“paid”为已支付，创建的时候默认未支付
		CreatedAt   string  `json:"createdAt"`   // 创建时间
		UpdatedAt   string  `json:"updatedAt"`   // 更新时间
	}

	CreateOrderReq {
		ProductId int `json:"productId"` // 商品ID
		Quantity  int `json:"quantity"`  // 购买数量
	}


	GetOrderReq {
		OrderId int `json:"orderId"` // 订单ID
	}

	PayOrderReq {
		OrderId int `json:"orderId"` // 订单ID
	}

	UseCouponReq {
		Coupon  float64 `json:"coupon"`  // 优惠券
		OrderId int     `json:"orderId"` // 订单ID
	}

	DeleteOrderReq {
		OrderId int `json:"orderId"` // 订单ID
	}

	SeckillRequest {
		ProductId   int `json:"productId"`   // 商品ID
		BuyQuantity int `json:"buyQuantity"` // 购买数量
	}

	SeckillResultReq {
		ProductId int `json:"productId"` // 商品ID
	}

	CommonResply { // 通用的响应结构体
		Code    int    `json:"Code"`
		Message string `json:"Message"`
		Data    string `json:"Data"`
	}
)

@server(
	jwt: Auth // 使用jwt认证
)

service pay {
	@doc (
		summary: "创建订单"
	)
	@handler CreateOrder
	post /pay/order/create (CreateOrderReq) returns (CommonResply)

	@doc (
		summary: "获取订单"
	)
	@handler GetOrder
	get /pay/order/get (GetOrderReq) returns (Order)

	@doc (
		summary: "支付订单"
	)
	@handler PayOrder
	post /pay/order/payment (PayOrderReq) returns (CommonResply)

	@doc (
		summary: "使用优惠券"
	)
	@handler UseCoupon
	post /pay/order/usecoupon (UseCouponReq) returns (CommonResply)

	@doc (
		summary: "删除订单"
	)
	@handler DeleteOrder
	delete /pay/order/delete (DeleteOrderReq) returns (CommonResply)

	@doc (
		summary: "秒杀商品请求"
	)
	@handler SeckillRequest
	post /pay/seckill/request (SeckillRequest) returns (CommonResply)

	@doc (
		summary: "获取秒杀结果"
	)
	@handler SeckillResult
	post /pay/seckill/result (SeckillResultReq) returns (CommonResply)
}